-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Organization Roles
-- Item: spUpdateOrganizationRole
-- Generated: 11/20/2024, 2:52:33 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR OrganizationRole
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [abstracts].[spUpdateOrganizationRole]
GO

CREATE PROCEDURE [abstracts].[spUpdateOrganizationRole]
    @ID int,
    @RoleName nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE
        [abstracts].[OrganizationRole]
    SET
        [RoleName] = @RoleName
    WHERE
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT
                                        *
                                    FROM
                                        [abstracts].[vwOrganizationRoles]
                                    WHERE
                                        [ID] = @ID
                                    
END
GO

GRANT EXECUTE ON [abstracts].[spUpdateOrganizationRole] TO [cdp_Integration], [cdp_Developer]
GO

------------------------------------------------------------
----- TRIGGER FOR __mj_UpdatedAt field for the OrganizationRole table
------------------------------------------------------------
DROP TRIGGER IF EXISTS [abstracts].trgUpdateOrganizationRole
GO
CREATE TRIGGER [abstracts].trgUpdateOrganizationRole
ON [abstracts].[OrganizationRole]
AFTER UPDATE
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE
        [abstracts].[OrganizationRole]
    SET
        __mj_UpdatedAt = GETUTCDATE()
    FROM
        [abstracts].[OrganizationRole] AS _organicTable
    INNER JOIN
        INSERTED AS I ON
        _organicTable.[ID] = I.[ID];
END;
GO
        